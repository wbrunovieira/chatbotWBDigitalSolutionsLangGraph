version: '3.8'

networks:
  {{ docker_network }}:
    external: true

volumes:
  qdrant_data:
    driver: local
  chatbot_redis_data:
    driver: local

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: chatbot_qdrant
    restart: always
    ports:
      - "{{ qdrant_port }}:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__API_KEY={{ qdrant_api_key }}
      - QDRANT__SERVICE__ENABLE_TLS=false
    networks:
      - {{ docker_network }}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis-chatbot:
    image: redis:7-alpine
    container_name: chatbot_redis
    restart: always
    command: redis-server --requirepass {{ redis_password }} --port 6379
    ports:
      - "{{ redis_port }}:6379"
    volumes:
      - chatbot_redis_data:/data
    networks:
      - {{ docker_network }}
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6379", "-a", "{{ redis_password }}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  chatbot:
    build:
      context: .
      dockerfile: Dockerfile
    image: wb-chatbot:latest
    container_name: chatbot_app
    restart: always
    ports:
      - "{{ app_port }}:8000"
    environment:
      - DEEPSEEK_API_KEY={{ deepseek_api_key }}
      - QDRANT_HOST=http://qdrant:6333
      - QDRANT_API_KEY={{ qdrant_api_key }}
      - REDIS_HOST=redis-chatbot
      - REDIS_PORT=6379
      - REDIS_PASSWORD={{ redis_password }}
      - REDIS_DB=0
    depends_on:
      qdrant:
        condition: service_healthy
      redis-chatbot:
        condition: service_healthy
    networks:
      - {{ docker_network }}
    volumes:
      - {{ install_path }}/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"